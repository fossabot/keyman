// Code generated by protoc-gen-go. DO NOT EDIT.
// source: keyman.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Metadata struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash                 string               `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Size                 uint64               `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5cbbb31f49fa2da, []int{0}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metadata) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Metadata) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *Metadata) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type ListRequest struct {
	All                  bool     `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5cbbb31f49fa2da, []int{1}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

type GetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5cbbb31f49fa2da, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetResponse struct {
	Chunk                []byte   `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5cbbb31f49fa2da, []int{3}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetChunk() []byte {
	if m != nil {
		return m.Chunk
	}
	return nil
}

type SetRequest struct {
	// Types that are valid to be assigned to Value:
	//	*SetRequest_Name
	//	*SetRequest_Chunk
	Value                isSetRequest_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5cbbb31f49fa2da, []int{4}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

type isSetRequest_Value interface {
	isSetRequest_Value()
}

type SetRequest_Name struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3,oneof"`
}

type SetRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*SetRequest_Name) isSetRequest_Value() {}

func (*SetRequest_Chunk) isSetRequest_Value() {}

func (m *SetRequest) GetValue() isSetRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SetRequest) GetName() string {
	if x, ok := m.GetValue().(*SetRequest_Name); ok {
		return x.Name
	}
	return ""
}

func (m *SetRequest) GetChunk() []byte {
	if x, ok := m.GetValue().(*SetRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SetRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SetRequest_Name)(nil),
		(*SetRequest_Chunk)(nil),
	}
}

type LogRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Limit                uint64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogRequest) Reset()         { *m = LogRequest{} }
func (m *LogRequest) String() string { return proto.CompactTextString(m) }
func (*LogRequest) ProtoMessage()    {}
func (*LogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a5cbbb31f49fa2da, []int{5}
}

func (m *LogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogRequest.Unmarshal(m, b)
}
func (m *LogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogRequest.Marshal(b, m, deterministic)
}
func (m *LogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogRequest.Merge(m, src)
}
func (m *LogRequest) XXX_Size() int {
	return xxx_messageInfo_LogRequest.Size(m)
}
func (m *LogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogRequest proto.InternalMessageInfo

func (m *LogRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func init() {
	proto.RegisterType((*Metadata)(nil), "pb.Metadata")
	proto.RegisterType((*ListRequest)(nil), "pb.ListRequest")
	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "pb.GetResponse")
	proto.RegisterType((*SetRequest)(nil), "pb.SetRequest")
	proto.RegisterType((*LogRequest)(nil), "pb.LogRequest")
}

func init() { proto.RegisterFile("keyman.proto", fileDescriptor_a5cbbb31f49fa2da) }

var fileDescriptor_a5cbbb31f49fa2da = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xdf, 0x4e, 0xf2, 0x30,
	0x14, 0xa7, 0x6c, 0xf0, 0xf1, 0x1d, 0x16, 0x31, 0x0d, 0x31, 0xcb, 0x6e, 0x20, 0x33, 0xc6, 0x5d,
	0x15, 0x82, 0xc6, 0x07, 0xd0, 0x0b, 0x48, 0xc4, 0x9b, 0xe2, 0x0b, 0x74, 0x5a, 0xb7, 0x85, 0x6d,
	0x9d, 0xb6, 0x23, 0xd1, 0x37, 0xf2, 0x2d, 0x4d, 0x5b, 0xc6, 0xd0, 0x0b, 0xe3, 0xdd, 0x39, 0xbf,
	0xfe, 0xfe, 0xf4, 0x9c, 0x03, 0xde, 0x96, 0xbf, 0x17, 0xac, 0x24, 0xd5, 0x9b, 0x50, 0x02, 0x77,
	0xab, 0x38, 0x98, 0x24, 0x42, 0x24, 0x39, 0x9f, 0x19, 0x24, 0xae, 0x5f, 0x66, 0x2a, 0x2b, 0xb8,
	0x54, 0xac, 0xa8, 0x2c, 0x29, 0xdc, 0xc1, 0xe0, 0x81, 0x2b, 0xf6, 0xcc, 0x14, 0xc3, 0x18, 0xdc,
	0x92, 0x15, 0xdc, 0x47, 0x53, 0x14, 0xfd, 0xa7, 0xa6, 0xd6, 0x58, 0xca, 0x64, 0xea, 0x77, 0x2d,
	0xa6, 0x6b, 0x4c, 0xc0, 0xd5, 0x36, 0xbe, 0x33, 0x45, 0xd1, 0x70, 0x11, 0x10, 0x9b, 0x41, 0x9a,
	0x0c, 0xf2, 0xd8, 0x64, 0x50, 0xc3, 0xd3, 0x1e, 0x32, 0xfb, 0xe0, 0xbe, 0x3b, 0x45, 0x91, 0x4b,
	0x4d, 0x1d, 0x4e, 0x60, 0xb8, 0xce, 0xa4, 0xa2, 0xfc, 0xb5, 0xe6, 0x52, 0xe1, 0x53, 0x70, 0x58,
	0x9e, 0x9b, 0xe4, 0x01, 0xd5, 0x65, 0x78, 0x0d, 0xb0, 0xe4, 0x87, 0xf7, 0x3f, 0x7e, 0x2d, 0x3c,
	0x87, 0xa1, 0x51, 0xc9, 0x4a, 0x94, 0x92, 0xe3, 0x31, 0xf4, 0x9e, 0xd2, 0xba, 0xdc, 0x1a, 0x9d,
	0x47, 0x6d, 0x13, 0xde, 0x01, 0x6c, 0x5a, 0xeb, 0xf1, 0xb1, 0xf5, 0xaa, 0xb3, 0x37, 0x3f, 0x6b,
	0x94, 0xda, 0xdd, 0x5b, 0x75, 0xf6, 0xda, 0xdb, 0x7f, 0xd0, 0xdb, 0xb1, 0xbc, 0xe6, 0xe1, 0x0d,
	0xc0, 0x5a, 0x24, 0xbf, 0xfd, 0x6f, 0x0c, 0xbd, 0x3c, 0x2b, 0x32, 0x65, 0x2c, 0x5c, 0x6a, 0x9b,
	0xc5, 0x27, 0x82, 0xfe, 0xbd, 0x39, 0x13, 0xbe, 0x04, 0x57, 0xef, 0x00, 0x8f, 0x48, 0x15, 0x93,
	0xa3, 0x6d, 0x04, 0x9e, 0x06, 0x9a, 0xb3, 0xcc, 0x11, 0x8e, 0xc0, 0x59, 0x72, 0x85, 0x4f, 0x34,
	0xdc, 0x2e, 0x25, 0x18, 0x1d, 0x7a, 0x3b, 0xee, 0x1c, 0xe1, 0x0b, 0x70, 0x36, 0x0d, 0xb3, 0x9d,
	0xf1, 0xbb, 0x61, 0x64, 0x68, 0x6b, 0x91, 0x58, 0x5a, 0x3b, 0xc5, 0xcf, 0xdc, 0xb8, 0x6f, 0x4e,
	0x7a, 0xf5, 0x15, 0x00, 0x00, 0xff, 0xff, 0xf7, 0xed, 0xd1, 0x1d, 0x58, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// KeymanClient is the client API for Keyman service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KeymanClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (Keyman_ListClient, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (Keyman_GetClient, error)
	Set(ctx context.Context, opts ...grpc.CallOption) (Keyman_SetClient, error)
	Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (Keyman_LogClient, error)
}

type keymanClient struct {
	cc *grpc.ClientConn
}

func NewKeymanClient(cc *grpc.ClientConn) KeymanClient {
	return &keymanClient{cc}
}

func (c *keymanClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (Keyman_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Keyman_serviceDesc.Streams[0], "/pb.Keyman/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &keymanListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Keyman_ListClient interface {
	Recv() (*Metadata, error)
	grpc.ClientStream
}

type keymanListClient struct {
	grpc.ClientStream
}

func (x *keymanListClient) Recv() (*Metadata, error) {
	m := new(Metadata)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *keymanClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (Keyman_GetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Keyman_serviceDesc.Streams[1], "/pb.Keyman/Get", opts...)
	if err != nil {
		return nil, err
	}
	x := &keymanGetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Keyman_GetClient interface {
	Recv() (*GetResponse, error)
	grpc.ClientStream
}

type keymanGetClient struct {
	grpc.ClientStream
}

func (x *keymanGetClient) Recv() (*GetResponse, error) {
	m := new(GetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *keymanClient) Set(ctx context.Context, opts ...grpc.CallOption) (Keyman_SetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Keyman_serviceDesc.Streams[2], "/pb.Keyman/Set", opts...)
	if err != nil {
		return nil, err
	}
	x := &keymanSetClient{stream}
	return x, nil
}

type Keyman_SetClient interface {
	Send(*SetRequest) error
	CloseAndRecv() (*Metadata, error)
	grpc.ClientStream
}

type keymanSetClient struct {
	grpc.ClientStream
}

func (x *keymanSetClient) Send(m *SetRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *keymanSetClient) CloseAndRecv() (*Metadata, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Metadata)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *keymanClient) Log(ctx context.Context, in *LogRequest, opts ...grpc.CallOption) (Keyman_LogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Keyman_serviceDesc.Streams[3], "/pb.Keyman/Log", opts...)
	if err != nil {
		return nil, err
	}
	x := &keymanLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Keyman_LogClient interface {
	Recv() (*Metadata, error)
	grpc.ClientStream
}

type keymanLogClient struct {
	grpc.ClientStream
}

func (x *keymanLogClient) Recv() (*Metadata, error) {
	m := new(Metadata)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// KeymanServer is the server API for Keyman service.
type KeymanServer interface {
	List(*ListRequest, Keyman_ListServer) error
	Get(*GetRequest, Keyman_GetServer) error
	Set(Keyman_SetServer) error
	Log(*LogRequest, Keyman_LogServer) error
}

// UnimplementedKeymanServer can be embedded to have forward compatible implementations.
type UnimplementedKeymanServer struct {
}

func (*UnimplementedKeymanServer) List(req *ListRequest, srv Keyman_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedKeymanServer) Get(req *GetRequest, srv Keyman_GetServer) error {
	return status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedKeymanServer) Set(srv Keyman_SetServer) error {
	return status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedKeymanServer) Log(req *LogRequest, srv Keyman_LogServer) error {
	return status.Errorf(codes.Unimplemented, "method Log not implemented")
}

func RegisterKeymanServer(s *grpc.Server, srv KeymanServer) {
	s.RegisterService(&_Keyman_serviceDesc, srv)
}

func _Keyman_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KeymanServer).List(m, &keymanListServer{stream})
}

type Keyman_ListServer interface {
	Send(*Metadata) error
	grpc.ServerStream
}

type keymanListServer struct {
	grpc.ServerStream
}

func (x *keymanListServer) Send(m *Metadata) error {
	return x.ServerStream.SendMsg(m)
}

func _Keyman_Get_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KeymanServer).Get(m, &keymanGetServer{stream})
}

type Keyman_GetServer interface {
	Send(*GetResponse) error
	grpc.ServerStream
}

type keymanGetServer struct {
	grpc.ServerStream
}

func (x *keymanGetServer) Send(m *GetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _Keyman_Set_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(KeymanServer).Set(&keymanSetServer{stream})
}

type Keyman_SetServer interface {
	SendAndClose(*Metadata) error
	Recv() (*SetRequest, error)
	grpc.ServerStream
}

type keymanSetServer struct {
	grpc.ServerStream
}

func (x *keymanSetServer) SendAndClose(m *Metadata) error {
	return x.ServerStream.SendMsg(m)
}

func (x *keymanSetServer) Recv() (*SetRequest, error) {
	m := new(SetRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Keyman_Log_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(LogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(KeymanServer).Log(m, &keymanLogServer{stream})
}

type Keyman_LogServer interface {
	Send(*Metadata) error
	grpc.ServerStream
}

type keymanLogServer struct {
	grpc.ServerStream
}

func (x *keymanLogServer) Send(m *Metadata) error {
	return x.ServerStream.SendMsg(m)
}

var _Keyman_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Keyman",
	HandlerType: (*KeymanServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Keyman_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Get",
			Handler:       _Keyman_Get_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Set",
			Handler:       _Keyman_Set_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Log",
			Handler:       _Keyman_Log_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "keyman.proto",
}
